services:
  - type: web
    name: asset-anchor-api
    runtime: python
    plan: standard
    region: oregon
    repo: https://github.com/mjoyner1029/Property.git
    branch: main
    rootDir: backend
    buildCommand: pip install -r requirements.txt
    preDeployCommand: bash ../scripts/run_migrations.sh
    startCommand: >
      gunicorn wsgi:app
      --workers 2
      --threads 4
      --worker-class gthread
      --timeout 120
      --bind 0.0.0.0:${PORT}
      --max-requests 1000
      --max-requests-jitter 100
    healthCheckPath: /healthz
    healthCheckTimeout: 10
    healthCheckInterval: 30
    dependsOn:
      - name: asset-anchor-redis
      - name: asset-anchor-db
    envVars:
      - key: APP_ENV
        value: production
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: wsgi.py
      - key: PYTHONUNBUFFERED
        value: "1"

      # ==== REQUIRED SECRETS ====
      - key: SECRET_KEY
        value: "B9gnyxN7PBmS3cdOhX-uroVQeWqL6RX6VgEmpQ_ifIyqNczbXkE9SOcdUl9UTdIU"
      - key: JWT_SECRET_KEY
        value: "xDlY7V-NXV2hoGWGO5cLcuG80FvjGLdRh-IH6Bj30Wa0Ld2MscLjkxvGUTYW9oGCSCd9bdcZcc-4PcaIm1YeOA"

      - key: STRIPE_PUBLIC_KEY
        value: "pk_live_51RviuHRRzCooiyn90jiCw25KJRD4GXb4enFomJc2x0FKLWeChHCPoNwmXT7vaqjc2XcUuyB8Dl04ocoxo8XM0yPp00AJeM52vN"
      - key: STRIPE_SECRET_KEY
        value: "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"
      - key: STRIPE_WEBHOOK_SECRET
        value: "<PASTE_YOUR_STRIPE_WEBHOOK_SECRET>"

      - key: EMAIL_API_KEY
        value: "<PASTE_YOUR_POSTMARK_API_KEY>"

      # ==== OPTIONAL (only if using S3 for uploads) ====
      - key: S3_BUCKET
        value: "<YOUR_S3_BUCKET_NAME>"
      - key: S3_REGION
        value: "<YOUR_S3_REGION>"
      - key: AWS_ACCESS_KEY_ID
        value: "<YOUR_AWS_ACCESS_KEY_ID>"
      - key: AWS_SECRET_ACCESS_KEY
        value: "<YOUR_AWS_SECRET_ACCESS_KEY>"

      # ==== OPTIONAL (monitoring/logging) ====
      - key: SENTRY_DSN
        value: "<YOUR_SENTRY_DSN>"

      # ==== CORS / Frontend ====
      - key: CORS_ORIGINS
        value: https://assetanchor.io,https://www.assetanchor.io,https://assetanchor.vercel.app
      - key: CORS_ALLOW_ORIGINS
        value: https://assetanchor.io,https://www.assetanchor.io,https://assetanchor.vercel.app
      - key: FRONTEND_URL
        value: https://assetanchor.vercel.app

      # ==== Misc ====
      - key: EMAIL_PROVIDER
        value: postmark
      - key: EMAIL_FROM
        value: no-reply@assetanchor.io
      - key: LOG_LEVEL
        value: INFO
      - key: CSP_ENFORCE
        value: "true"

      # Redis (rate limiter + Socket.IO)
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: asset-anchor-redis
          property: connectionString
      - key: RATELIMIT_STORAGE_URI
        fromService:
          type: keyvalue
          name: asset-anchor-redis
          property: connectionString
      - key: SOCKETIO_MESSAGE_QUEUE
        fromService:
          type: keyvalue
          name: asset-anchor-redis
          property: connectionString

      # Database URL via env group
      - fromGroup: asset-anchor-db-env

  - type: keyvalue
    name: asset-anchor-redis
    plan: free
    region: oregon
    ipAllowList: []

databases:
  - name: asset-anchor-db
    plan: standard
    region: oregon
    ipAllowList: []

envVarGroups:
  - name: asset-anchor-db-env
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: asset-anchor-db
          property: connectionString
