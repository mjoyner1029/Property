name: backend-ci

on:
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Python ${{ matrix.python-version }} â€¢ Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            backend/requirements.txt
            backend/requirements-dev.txt

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Lint (ruff)
        working-directory: backend
        run: |
          if [ -f ruff.toml ] || [ -f pyproject.toml ]; then ruff --version && ruff .; else echo "ruff not configured, skipping"; fi

      - name: Run tests with coverage
        working-directory: backend
        env:
          PYTHONWARNINGS: always::DeprecationWarning
          FLASK_ENV: test
          DATABASE_URL: sqlite:///test.db
          RATELIMIT_STORAGE_URI: memory://
          DISABLE_RATE_LIMIT: "true"
          SENTRY_DSN: ""
          STRIPE_SECRET_KEY: "sk_test_dummy"
          STRIPE_WEBHOOK_SECRET: "whsec_dummy"
          TEST_AUTO_VERIFY_EMAIL: "1"
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=src --cov-report=xml
          
      - name: Test with gevent
        working-directory: backend
        env:
          PYTHONWARNINGS: always::DeprecationWarning
          FLASK_ENV: test
          DATABASE_URL: sqlite:///test.db
          RATELIMIT_STORAGE_URI: memory://
          DISABLE_RATE_LIMIT: "true"
          SENTRY_DSN: ""
          STRIPE_SECRET_KEY: "sk_test_dummy"
          STRIPE_WEBHOOK_SECRET: "whsec_dummy"
          TEST_AUTO_VERIFY_EMAIL: "1"
        run: |
          pip install gevent
          pytest -q tests/test_concurrency.py tests/test_wsgi.py --gevent

      - name: Save test logs
        if: always()
        working-directory: backend
        run: |
          mkdir -p test-logs
          if [ -f pytest-report.txt ]; then cp pytest-report.txt test-logs/; fi
          if [ -f server.log ]; then cp server.log test-logs/; fi
          find . -name '*.log' -type f -not -path '*/\.*' -not -path '*/test_venv/*' -exec cp {} test-logs/ \;
          echo "Run date: $(date)" > test-logs/run-info.txt
          echo "Python version: ${{ matrix.python-version }}" >> test-logs/run-info.txt
          pip freeze > test-logs/pip-freeze.txt

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.0.0
        with:
          name: backend-coverage-${{ matrix.python-version }}
          path: backend/coverage.xml
          retention-days: 14
          
      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.0.0
        with:
          name: backend-test-logs-${{ matrix.python-version }}
          path: backend/test-logs/
          retention-days: 7
          
      # ---- Security scanning (Trivy) ----
      - name: Detect Dockerfile
        id: detect
        working-directory: backend
        run: |
          if [ -f Dockerfile ]; then
            echo "has_dockerfile=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_dockerfile=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Docker Buildx
        if: steps.detect.outputs.has_dockerfile == 'true'
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Build local image (no push)
        if: steps.detect.outputs.has_dockerfile == 'true'
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: asset-anchor/backend:ci-${{ github.sha }}

      - name: Trivy scan (image)
        if: steps.detect.outputs.has_dockerfile == 'true'
        uses: aquasecurity/trivy-action@91713af97dc80187565512baba04e5bb0142fd4b
        with:
          image-ref: asset-anchor/backend:ci-${{ github.sha }}
          format: sarif
          output: trivy-backend-results.sarif
          ignore-unfixed: true
          vuln-type: "os,library"

      - name: Trivy scan (filesystem fallback)
        if: steps.detect.outputs.has_dockerfile != 'true'
        uses: aquasecurity/trivy-action@91713af97dc80187565512baba04e5bb0142fd4b
        with:
          scan-type: fs
          scan-ref: backend
          format: sarif
          output: trivy-backend-results.sarif
          ignore-unfixed: true
          vuln-type: "os,library"

      - name: Upload Trivy SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498
        with:
          sarif_file: trivy-backend-results.sarif
          category: trivy-backend
