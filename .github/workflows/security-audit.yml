name: Security Audit

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  push:
    branches: [ main ]
    paths:
      - '**/package.json'
      - '**/package-lock.json'
      - '**/requirements.txt'
      - 'Pipfile'
      - 'Pipfile.lock'
  pull_request:
    branches: [ main ]
    paths:
      - '**/package.json'
      - '**/package-lock.json'
      - '**/requirements.txt'
      - 'Pipfile'
      - 'Pipfile.lock'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  security-events: write

jobs:
  python-dependencies-audit:
    name: Python Dependencies Audit
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'security-audit') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install safety
        run: pip install safety

      - name: Run safety check
        run: |
          if [ -f requirements.txt ]; then
            safety check -r requirements.txt --full-report --output text
          fi
          
          if [ -f backend/requirements.txt ]; then
            safety check -r backend/requirements.txt --full-report --output text
          fi
          
          if [ -f Pipfile ]; then
            pip install pipenv
            pipenv requirements > pipfile-requirements.txt
            safety check -r pipfile-requirements.txt --full-report --output text
          fi
        continue-on-error: true

      - name: Run Bandit (Python Static Analysis)
        run: |
          pip install bandit
          bandit -r . -f json -o bandit-results.json || true
        continue-on-error: true

      - name: Upload Bandit Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: bandit-results.json
          category: bandit
        if: always()
        continue-on-error: true

  javascript-dependencies-audit:
    name: JavaScript Dependencies Audit
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'security-audit') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Frontend NPM Audit
        run: |
          if [ -f frontend/package.json ]; then
            cd frontend
            npm audit --json || true
            cd ..
          fi
        continue-on-error: true

      - name: Frontend-tenant NPM Audit
        run: |
          if [ -f frontend-tenant/package.json ]; then
            cd frontend-tenant
            npm audit --json || true
            cd ..
          fi
        continue-on-error: true

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'security-audit') }}
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'python']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
        continue-on-error: true

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'security-audit') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.16.0
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  docker-image-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'security-audit') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check if backend Dockerfile exists
        id: check_backend_dockerfile
        run: |
          if [ -f backend/Dockerfile ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if frontend Dockerfile exists
        id: check_frontend_dockerfile
        run: |
          if [ -f frontend/Dockerfile ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build backend image for scanning
        if: steps.check_backend_dockerfile.outputs.exists == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: assetanchor-backend:scan
          load: true
        continue-on-error: true

      - name: Build frontend image for scanning
        if: steps.check_frontend_dockerfile.outputs.exists == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
        continue-on-error: true
          file: ./frontend/Dockerfile
          push: false
          tags: assetanchor-frontend:scan
          load: true

      - name: Run Trivy vulnerability scanner on backend
        if: steps.check_backend_dockerfile.outputs.exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'assetanchor-backend:scan'
          format: 'sarif'
          output: 'trivy-backend-results.sarif'

      - name: Run Trivy vulnerability scanner on frontend
        if: steps.check_frontend_dockerfile.outputs.exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'assetanchor-frontend:scan'
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'

      - name: Upload Trivy backend scan results
        if: steps.check_backend_dockerfile.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-backend-results.sarif'
          category: trivy-backend

      - name: Upload Trivy frontend scan results
        if: steps.check_frontend_dockerfile.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-frontend-results.sarif'
          category: trivy-frontend
