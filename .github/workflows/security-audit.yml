name: security-audit

on:
  schedule:
    - cron: "0 0 * * *"           # Daily at 00:00 UTC
  push:
    branches: [ main ]
    paths:
      - "**/package.json"
      - "**/package-lock.json"
      - "**/requirements.txt"
      - "Pipfile"
      - "Pipfile.lock"
  pull_request:
    branches: [ main ]
    paths:
      - "**/package.json"
      - "**/package-lock.json"
      - "**/requirements.txt"
      - "Pipfile"
      - "Pipfile.lock"
  workflow_dispatch:

permissions:
  contents: read
  security-events: write   # for SARIF uploads (CodeQL / Trivy)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-dependencies-audit:
    name: Python Dependencies Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Run on push/schedule/dispatch. On PRs, only run if the PR has label 'security-audit'.
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'security-audit') }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Create results dir
        run: mkdir -p security-audit/python

      - name: Install safety & helpers
        run: |
          python -m pip install --upgrade pip
          pip install safety pipenv bandit

      - name: Safety check (root requirements.txt)
        run: |
          if [ -f requirements.txt ]; then
            safety check -r requirements.txt --full-report > security-audit/python/safety-root.txt || true
          fi

      - name: Safety check (backend/requirements.txt)
        run: |
          if [ -f backend/requirements.txt ]; then
            safety check -r backend/requirements.txt --full-report > security-audit/python/safety-backend.txt || true
          fi

      - name: Safety check (Pipfile)
        run: |
          if [ -f Pipfile ]; then
            pipenv requirements > security-audit/python/pipfile-requirements.txt
            safety check -r security-audit/python/pipfile-requirements.txt --full-report > security-audit/python/safety-pipfile.txt || true
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: python-security-audit
          path: security-audit/python
          retention-days: 7

  npm-audit:
    name: npm Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'security-audit') }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: '20'

      - name: Create results dir
        run: mkdir -p security-audit/npm

      - name: npm audit (root)
        if: always()
        run: |
          if [ -f package.json ]; then
            npm audit --json > security-audit/npm/npm-audit-root.json || true
          fi

      - name: npm audit (frontend)
        if: always()
        run: |
          if [ -f frontend/package.json ]; then
            cd frontend
            npm audit --json > ../security-audit/npm/npm-audit-frontend.json || true
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: npm-security-audit
          path: security-audit/npm
          retention-days: 7
