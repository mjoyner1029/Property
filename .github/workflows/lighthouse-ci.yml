name: Lighthouse CI

on:
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/lighthouse-ci.yml'
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/lighthouse-ci.yml'

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        
      - name: Install serve
        run: npm install -g serve
        
      - name: Start server in background
        working-directory: ./frontend
        run: |
          serve -s build -l 3000 &
          sleep 5
        
      - name: Run Lighthouse CI
        id: lighthouse
        working-directory: ./frontend
        run: |
          npm install -g @lhci/cli
          lhci autorun \
            --collect.url=http://localhost:3000 \
            --collect.url=http://localhost:3000/login \
            --collect.url=http://localhost:3000/register \
            --collect.settings.chromeFlags="--headless" \
            --upload.target=temporary-public-storage \
            --assert.assertions.performance=85 \
            --assert.assertions.accessibility=90 \
            --assert.assertions.seo=85 \
            --assert.assertions.best-practices=85
        continue-on-error: true
        
      - name: Format Lighthouse score
        id: format_lighthouse_score
        working-directory: ./frontend
        run: |
          echo "::set-output name=summary::$(npx lighthouse-ci summary)"
        continue-on-error: true
        
      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Lighthouse Performance Results
            
            Performance: ${{ steps.format_lighthouse_score.outputs.summary }}
            
            *Lighthouse ran against the build previews and found the above results.*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
